/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import data.Sequence;
import javax.swing.JLabel;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Philip Becker-Ehmck
 */
public class SequencesPanel extends javax.swing.JPanel {

    /**
     * Creates new form SequencesPanel
     */
    public SequencesPanel() {
        initComponents();
        
        // Next Access column should be aligned to the center
        JLabel label = null;
        DefaultTableCellRenderer rightRenderer = new DefaultTableCellRenderer();
        rightRenderer.setHorizontalAlignment(label.RIGHT);
        sequencesTable.getColumnModel().getColumn(2).setCellRenderer(rightRenderer);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        seqScrollPane = new javax.swing.JScrollPane();
        sequencesTable = new javax.swing.JTable();

        java.util.ResourceBundle bundle = java.util.ResourceBundle.getBundle("view/Bundle"); // NOI18N
        setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createTitledBorder(""), bundle.getString("SequencesPanel.border.title"), javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Arial", 1, 12))); // NOI18N
        setToolTipText("A Sequence is a repetition of a specific pattern.");
        setLayout(new java.awt.GridBagLayout());

        seqScrollPane.setMaximumSize(new java.awt.Dimension(500, 150));
        seqScrollPane.setMinimumSize(new java.awt.Dimension(500, 150));
        seqScrollPane.setName(bundle.getString("SequencesPanel.seqScrollPane.name")); // NOI18N
        seqScrollPane.setPreferredSize(new java.awt.Dimension(500, 150));

        sequencesTable.setAutoCreateRowSorter(true);
        sequencesTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Repetitions", "Occurences", "Next Access", "Next Pattern"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.Double.class, java.lang.String.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        seqScrollPane.setViewportView(sequencesTable);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        add(seqScrollPane, gridBagConstraints);
    }// </editor-fold>//GEN-END:initComponents
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane seqScrollPane;
    private javax.swing.JTable sequencesTable;
    // End of variables declaration//GEN-END:variables

    public void addSequence(Sequence seq) {
        Object[] tmp = new Object[4];
        tmp[0] = seq.getNumRepetitions();
        tmp[1] = seq.getNumOccurrences();
        tmp[2] = "(" + seq.getNextAccessNOffset() + "|" + seq.getNextAccessMOffset() + ")";
        if (seq.getNextPattern() != null) {
            tmp[3] = seq.getNextPattern().getPID();
        }
        ((DefaultTableModel)sequencesTable.getModel()).addRow(tmp);
    }

    public void removeSequences() {
        while (((DefaultTableModel)sequencesTable.getModel()).getRowCount() > 0) {
            ((DefaultTableModel)sequencesTable.getModel()).removeRow(0);
        }
    }
}
